// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: github.com/asynkron/protoactor-go/scheduleflow/pkg/apis/kubeproxy/informer.proto

package kubeproxy

import (
	reflect "reflect"
	sync "sync"

	actor "github.com/asynkron/protoactor-go/actor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	_ "k8s.io/apimachinery/pkg/runtime/schema"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribeAction int32

const (
	SubscribeAction_CREATE SubscribeAction = 0
	SubscribeAction_UPDATE SubscribeAction = 1
	SubscribeAction_DELETE SubscribeAction = 2
)

// Enum value maps for SubscribeAction.
var (
	SubscribeAction_name = map[int32]string{
		0: "CREATE",
		1: "UPDATE",
		2: "DELETE",
	}
	SubscribeAction_value = map[string]int32{
		"CREATE": 0,
		"UPDATE": 1,
		"DELETE": 2,
	}
)

func (x SubscribeAction) Enum() *SubscribeAction {
	p := new(SubscribeAction)
	*p = x
	return p
}

func (x SubscribeAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscribeAction) Descriptor() protoreflect.EnumDescriptor {
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_enumTypes[0].Descriptor()
}

func (SubscribeAction) Type() protoreflect.EnumType {
	return &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_enumTypes[0]
}

func (x SubscribeAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscribeAction.Descriptor instead.
func (SubscribeAction) EnumDescriptor() ([]byte, []int) {
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescGZIP(), []int{0}
}

type GroupVersionResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group    string `protobuf:"bytes,1,opt,name=Group,proto3" json:"Group,omitempty"`
	Version  string `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
	Resource string `protobuf:"bytes,3,opt,name=Resource,proto3" json:"Resource,omitempty"`
}

func (x *GroupVersionResource) Reset() {
	*x = GroupVersionResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVersionResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVersionResource) ProtoMessage() {}

func (x *GroupVersionResource) ProtoReflect() protoreflect.Message {
	mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVersionResource.ProtoReflect.Descriptor instead.
func (*GroupVersionResource) Descriptor() ([]byte, []int) {
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescGZIP(), []int{0}
}

func (x *GroupVersionResource) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GroupVersionResource) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GroupVersionResource) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

type SubscribeOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RateLimitation int64 `protobuf:"varint,1,opt,name=RateLimitation,proto3" json:"RateLimitation,omitempty"`
}

func (x *SubscribeOption) Reset() {
	*x = SubscribeOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeOption) ProtoMessage() {}

func (x *SubscribeOption) ProtoReflect() protoreflect.Message {
	mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeOption.ProtoReflect.Descriptor instead.
func (*SubscribeOption) Descriptor() ([]byte, []int) {
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeOption) GetRateLimitation() int64 {
	if x != nil {
		return x.RateLimitation
	}
	return 0
}

type RenewSubscribeResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GVR        *GroupVersionResource `protobuf:"bytes,1,opt,name=GVR,proto3" json:"GVR,omitempty"`
	ActionCode int32                 `protobuf:"varint,2,opt,name=ActionCode,proto3" json:"ActionCode,omitempty"`
	Option     *SubscribeOption      `protobuf:"bytes,3,opt,name=Option,proto3" json:"Option,omitempty"`
}

func (x *RenewSubscribeResource) Reset() {
	*x = RenewSubscribeResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewSubscribeResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewSubscribeResource) ProtoMessage() {}

func (x *RenewSubscribeResource) ProtoReflect() protoreflect.Message {
	mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewSubscribeResource.ProtoReflect.Descriptor instead.
func (*RenewSubscribeResource) Descriptor() ([]byte, []int) {
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescGZIP(), []int{2}
}

func (x *RenewSubscribeResource) GetGVR() *GroupVersionResource {
	if x != nil {
		return x.GVR
	}
	return nil
}

func (x *RenewSubscribeResource) GetActionCode() int32 {
	if x != nil {
		return x.ActionCode
	}
	return 0
}

func (x *RenewSubscribeResource) GetOption() *SubscribeOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type RenewSubscribeResourceFor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource   *RenewSubscribeResource `protobuf:"bytes,1,opt,name=Resource,proto3" json:"Resource,omitempty"`
	Subscriber *actor.PID              `protobuf:"bytes,2,opt,name=Subscriber,proto3" json:"Subscriber,omitempty"`
}

func (x *RenewSubscribeResourceFor) Reset() {
	*x = RenewSubscribeResourceFor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewSubscribeResourceFor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewSubscribeResourceFor) ProtoMessage() {}

func (x *RenewSubscribeResourceFor) ProtoReflect() protoreflect.Message {
	mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewSubscribeResourceFor.ProtoReflect.Descriptor instead.
func (*RenewSubscribeResourceFor) Descriptor() ([]byte, []int) {
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescGZIP(), []int{3}
}

func (x *RenewSubscribeResourceFor) GetResource() *RenewSubscribeResource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *RenewSubscribeResourceFor) GetSubscriber() *actor.PID {
	if x != nil {
		return x.Subscriber
	}
	return nil
}

type RenewSubscribeResourceGroupFor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources  []*RenewSubscribeResource `protobuf:"bytes,1,rep,name=Resources,proto3" json:"Resources,omitempty"`
	Subscriber *actor.PID                `protobuf:"bytes,2,opt,name=Subscriber,proto3" json:"Subscriber,omitempty"`
}

func (x *RenewSubscribeResourceGroupFor) Reset() {
	*x = RenewSubscribeResourceGroupFor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewSubscribeResourceGroupFor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewSubscribeResourceGroupFor) ProtoMessage() {}

func (x *RenewSubscribeResourceGroupFor) ProtoReflect() protoreflect.Message {
	mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewSubscribeResourceGroupFor.ProtoReflect.Descriptor instead.
func (*RenewSubscribeResourceGroupFor) Descriptor() ([]byte, []int) {
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescGZIP(), []int{4}
}

func (x *RenewSubscribeResourceGroupFor) GetResources() []*RenewSubscribeResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *RenewSubscribeResourceGroupFor) GetSubscriber() *actor.PID {
	if x != nil {
		return x.Subscriber
	}
	return nil
}

type SubscribeResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GVR        *GroupVersionResource `protobuf:"bytes,1,opt,name=GVR,proto3" json:"GVR,omitempty"`
	ActionCode int32                 `protobuf:"varint,2,opt,name=ActionCode,proto3" json:"ActionCode,omitempty"`
	Option     *SubscribeOption      `protobuf:"bytes,3,opt,name=Option,proto3" json:"Option,omitempty"`
}

func (x *SubscribeResource) Reset() {
	*x = SubscribeResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResource) ProtoMessage() {}

func (x *SubscribeResource) ProtoReflect() protoreflect.Message {
	mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResource.ProtoReflect.Descriptor instead.
func (*SubscribeResource) Descriptor() ([]byte, []int) {
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeResource) GetGVR() *GroupVersionResource {
	if x != nil {
		return x.GVR
	}
	return nil
}

func (x *SubscribeResource) GetActionCode() int32 {
	if x != nil {
		return x.ActionCode
	}
	return 0
}

func (x *SubscribeResource) GetOption() *SubscribeOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type SubscribeResourceFor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource   *SubscribeResource `protobuf:"bytes,1,opt,name=Resource,proto3" json:"Resource,omitempty"`
	Subscriber *actor.PID         `protobuf:"bytes,2,opt,name=Subscriber,proto3" json:"Subscriber,omitempty"`
}

func (x *SubscribeResourceFor) Reset() {
	*x = SubscribeResourceFor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResourceFor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResourceFor) ProtoMessage() {}

func (x *SubscribeResourceFor) ProtoReflect() protoreflect.Message {
	mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResourceFor.ProtoReflect.Descriptor instead.
func (*SubscribeResourceFor) Descriptor() ([]byte, []int) {
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescGZIP(), []int{6}
}

func (x *SubscribeResourceFor) GetResource() *SubscribeResource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *SubscribeResourceFor) GetSubscriber() *actor.PID {
	if x != nil {
		return x.Subscriber
	}
	return nil
}

type SubscribeConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp    *v1.Time           `protobuf:"bytes,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Subscribe    *SubscribeResource `protobuf:"bytes,2,opt,name=Subscribe,proto3" json:"Subscribe,omitempty"`
	IsSubscribed bool               `protobuf:"varint,3,opt,name=IsSubscribed,proto3" json:"IsSubscribed,omitempty"`
}

func (x *SubscribeConfirm) Reset() {
	*x = SubscribeConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeConfirm) ProtoMessage() {}

func (x *SubscribeConfirm) ProtoReflect() protoreflect.Message {
	mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeConfirm.ProtoReflect.Descriptor instead.
func (*SubscribeConfirm) Descriptor() ([]byte, []int) {
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescGZIP(), []int{7}
}

func (x *SubscribeConfirm) GetTimestamp() *v1.Time {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SubscribeConfirm) GetSubscribe() *SubscribeResource {
	if x != nil {
		return x.Subscribe
	}
	return nil
}

func (x *SubscribeConfirm) GetIsSubscribed() bool {
	if x != nil {
		return x.IsSubscribed
	}
	return false
}

type SubscribeGroupConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Confirms []*SubscribeConfirm `protobuf:"bytes,1,rep,name=Confirms,proto3" json:"Confirms,omitempty"`
}

func (x *SubscribeGroupConfirm) Reset() {
	*x = SubscribeGroupConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeGroupConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeGroupConfirm) ProtoMessage() {}

func (x *SubscribeGroupConfirm) ProtoReflect() protoreflect.Message {
	mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeGroupConfirm.ProtoReflect.Descriptor instead.
func (*SubscribeGroupConfirm) Descriptor() ([]byte, []int) {
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescGZIP(), []int{8}
}

func (x *SubscribeGroupConfirm) GetConfirms() []*SubscribeConfirm {
	if x != nil {
		return x.Confirms
	}
	return nil
}

type CreateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp   *v1.Time              `protobuf:"bytes,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	GVR         *GroupVersionResource `protobuf:"bytes,2,opt,name=GVR,proto3" json:"GVR,omitempty"`
	RawResource []byte                `protobuf:"bytes,3,opt,name=RawResource,proto3" json:"RawResource,omitempty"`
}

func (x *CreateEvent) Reset() {
	*x = CreateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEvent) ProtoMessage() {}

func (x *CreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEvent.ProtoReflect.Descriptor instead.
func (*CreateEvent) Descriptor() ([]byte, []int) {
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescGZIP(), []int{9}
}

func (x *CreateEvent) GetTimestamp() *v1.Time {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CreateEvent) GetGVR() *GroupVersionResource {
	if x != nil {
		return x.GVR
	}
	return nil
}

func (x *CreateEvent) GetRawResource() []byte {
	if x != nil {
		return x.RawResource
	}
	return nil
}

type DeleteEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp   *v1.Time              `protobuf:"bytes,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	GVR         *GroupVersionResource `protobuf:"bytes,2,opt,name=GVR,proto3" json:"GVR,omitempty"`
	RawResource []byte                `protobuf:"bytes,3,opt,name=RawResource,proto3" json:"RawResource,omitempty"`
}

func (x *DeleteEvent) Reset() {
	*x = DeleteEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEvent) ProtoMessage() {}

func (x *DeleteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEvent.ProtoReflect.Descriptor instead.
func (*DeleteEvent) Descriptor() ([]byte, []int) {
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteEvent) GetTimestamp() *v1.Time {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DeleteEvent) GetGVR() *GroupVersionResource {
	if x != nil {
		return x.GVR
	}
	return nil
}

func (x *DeleteEvent) GetRawResource() []byte {
	if x != nil {
		return x.RawResource
	}
	return nil
}

type UpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp   *v1.Time              `protobuf:"bytes,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	GVR         *GroupVersionResource `protobuf:"bytes,2,opt,name=GVR,proto3" json:"GVR,omitempty"`
	OldResource []byte                `protobuf:"bytes,3,opt,name=OldResource,proto3" json:"OldResource,omitempty"`
	NewResource []byte                `protobuf:"bytes,4,opt,name=NewResource,proto3" json:"NewResource,omitempty"`
}

func (x *UpdateEvent) Reset() {
	*x = UpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEvent) ProtoMessage() {}

func (x *UpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEvent.ProtoReflect.Descriptor instead.
func (*UpdateEvent) Descriptor() ([]byte, []int) {
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateEvent) GetTimestamp() *v1.Time {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *UpdateEvent) GetGVR() *GroupVersionResource {
	if x != nil {
		return x.GVR
	}
	return nil
}

func (x *UpdateEvent) GetOldResource() []byte {
	if x != nil {
		return x.OldResource
	}
	return nil
}

func (x *UpdateEvent) GetNewResource() []byte {
	if x != nil {
		return x.NewResource
	}
	return nil
}

var File_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto protoreflect.FileDescriptor

var file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69,
	0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x6b, 0x75, 0x62, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x1a, 0x36, 0x6b, 0x38, 0x73,
	0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x14, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x39,
	0x0a, 0x0f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x16, 0x52, 0x65,
	0x6e, 0x65, 0x77, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x47, 0x56, 0x52, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x03, 0x47, 0x56, 0x52, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x19,
	0x52, 0x65, 0x6e, 0x65, 0x77, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x49, 0x44, 0x52, 0x0a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x22, 0x8d, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x46, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x49, 0x44, 0x52, 0x0a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x22, 0x9a, 0x01, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x47, 0x56,
	0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x03, 0x47, 0x56, 0x52, 0x12, 0x1e, 0x0a,
	0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a,
	0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6b, 0x75, 0x62, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x7c, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x50, 0x49, 0x44, 0x52, 0x0a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x22,
	0xbc, 0x01, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x12, 0x48, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3a,
	0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x49, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x22, 0x50,
	0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x37, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x75, 0x62, 0x65,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x73,
	0x22, 0xac, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x48, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x31, 0x0a, 0x03, 0x47, 0x56,
	0x52, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x03, 0x47, 0x56, 0x52, 0x12, 0x20, 0x0a,
	0x0b, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0xac, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x48, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x31, 0x0a, 0x03, 0x47, 0x56, 0x52,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x03, 0x47, 0x56, 0x52, 0x12, 0x20, 0x0a, 0x0b,
	0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xce,
	0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x48,
	0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x31, 0x0a, 0x03, 0x47, 0x56, 0x52, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x03, 0x47, 0x56, 0x52, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x6c, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x4f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2a,
	0x35, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x42, 0x31, 0x5a, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x6b, 0x75, 0x62, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescOnce sync.Once
	file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescData = file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDesc
)

func file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescGZIP() []byte {
	file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescOnce.Do(func() {
		file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescData = protoimpl.X.CompressGZIP(file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescData)
	})
	return file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDescData
}

var file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_goTypes = []interface{}{
	(SubscribeAction)(0),                   // 0: kubeproxy.SubscribeAction
	(*GroupVersionResource)(nil),           // 1: kubeproxy.GroupVersionResource
	(*SubscribeOption)(nil),                // 2: kubeproxy.SubscribeOption
	(*RenewSubscribeResource)(nil),         // 3: kubeproxy.RenewSubscribeResource
	(*RenewSubscribeResourceFor)(nil),      // 4: kubeproxy.RenewSubscribeResourceFor
	(*RenewSubscribeResourceGroupFor)(nil), // 5: kubeproxy.RenewSubscribeResourceGroupFor
	(*SubscribeResource)(nil),              // 6: kubeproxy.SubscribeResource
	(*SubscribeResourceFor)(nil),           // 7: kubeproxy.SubscribeResourceFor
	(*SubscribeConfirm)(nil),               // 8: kubeproxy.SubscribeConfirm
	(*SubscribeGroupConfirm)(nil),          // 9: kubeproxy.SubscribeGroupConfirm
	(*CreateEvent)(nil),                    // 10: kubeproxy.CreateEvent
	(*DeleteEvent)(nil),                    // 11: kubeproxy.DeleteEvent
	(*UpdateEvent)(nil),                    // 12: kubeproxy.UpdateEvent
	(*actor.PID)(nil),                      // 13: actor.PID
	(*v1.Time)(nil),                        // 14: k8s.io.apimachinery.pkg.apis.meta.v1.Time
}
var file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_depIdxs = []int32{
	1,  // 0: kubeproxy.RenewSubscribeResource.GVR:type_name -> kubeproxy.GroupVersionResource
	2,  // 1: kubeproxy.RenewSubscribeResource.Option:type_name -> kubeproxy.SubscribeOption
	3,  // 2: kubeproxy.RenewSubscribeResourceFor.Resource:type_name -> kubeproxy.RenewSubscribeResource
	13, // 3: kubeproxy.RenewSubscribeResourceFor.Subscriber:type_name -> actor.PID
	3,  // 4: kubeproxy.RenewSubscribeResourceGroupFor.Resources:type_name -> kubeproxy.RenewSubscribeResource
	13, // 5: kubeproxy.RenewSubscribeResourceGroupFor.Subscriber:type_name -> actor.PID
	1,  // 6: kubeproxy.SubscribeResource.GVR:type_name -> kubeproxy.GroupVersionResource
	2,  // 7: kubeproxy.SubscribeResource.Option:type_name -> kubeproxy.SubscribeOption
	6,  // 8: kubeproxy.SubscribeResourceFor.Resource:type_name -> kubeproxy.SubscribeResource
	13, // 9: kubeproxy.SubscribeResourceFor.Subscriber:type_name -> actor.PID
	14, // 10: kubeproxy.SubscribeConfirm.Timestamp:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	6,  // 11: kubeproxy.SubscribeConfirm.Subscribe:type_name -> kubeproxy.SubscribeResource
	8,  // 12: kubeproxy.SubscribeGroupConfirm.Confirms:type_name -> kubeproxy.SubscribeConfirm
	14, // 13: kubeproxy.CreateEvent.Timestamp:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	1,  // 14: kubeproxy.CreateEvent.GVR:type_name -> kubeproxy.GroupVersionResource
	14, // 15: kubeproxy.DeleteEvent.Timestamp:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	1,  // 16: kubeproxy.DeleteEvent.GVR:type_name -> kubeproxy.GroupVersionResource
	14, // 17: kubeproxy.UpdateEvent.Timestamp:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	1,  // 18: kubeproxy.UpdateEvent.GVR:type_name -> kubeproxy.GroupVersionResource
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_init() }
func file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_init() {
	if File_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupVersionResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenewSubscribeResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenewSubscribeResourceFor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenewSubscribeResourceGroupFor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResourceFor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeGroupConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_goTypes,
		DependencyIndexes: file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_depIdxs,
		EnumInfos:         file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_enumTypes,
		MessageInfos:      file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_msgTypes,
	}.Build()
	File_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto = out.File
	file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_rawDesc = nil
	file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_goTypes = nil
	file_scheduleflow_io_scheduleflow_pkg_apis_kubeproxy_informer_proto_depIdxs = nil
}
